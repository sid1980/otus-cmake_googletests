#include <iostream>
/*
 Задание

- std::vector (требует подключения заголовочного файла <vector>)
- std::list (требует подключения заголовочного файла <list>)
Реализовать не менее 10-ти тестовых сценариев для каждого из контейнеров. Конкретные
сценарии придумать самостоятельно, но проверять они должны основную функциональность
контейнеров:
- создание контейнера
- вставка элементов в конец
- вставка элементов в начало
- вставка элементов в середину
- удаление элементов из конца
- удаление элементов из начала
- удаление элементов из середины
- получение элементов из контейнера
- получение размера контейнера (фактическое количество элементов)
*/

#include <vector>
#include <list>
#include <iostream>

int main(int, char**) {
    std::cout << "Hello from otus list demo project!" << std::endl;

    const size_t count = 10;

    std::vector<int> vec;

   //  - создание контейнера
   std::list<int>  lst;
//- вставка элементов в конец
 vec.push_back(10);
// - вставка элементов в начало
// vec.push_front(vec.begin(), 1 , 1);
//- вставка элементов в середину
vec.insert(vec.begin(), 300);
// - удаление элементов из конца
vec.pop_back();
//- удаление элементов из начала
// vec.pop_front();
// - удаление элементов из середины

//- получение элементов из контейнера
//- получение размера контейнера (фактическое количество элементов)


    



    // otus::List<size_t> list;
    // for (size_t i = 0; i < count; ++i) {
    //     list.push_back(i);
    //     list.push_front(i);
    // }

    // for (size_t i = 0; i < count * 2; ++i) {
    //     std::cout << list.front() << ' ';
    //     list.pop_front();
    // }
    // std::cout << std::endl;

    return 0;
}